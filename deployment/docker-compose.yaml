version: "3"
services:
  db-postgres:
    image: pgvector/pgvector:0.8.0-pg16
    volumes:
      - pg_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=compliance_ai_assistant
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  db-neo4j:
    image: neo4j:2025.04.0-community-bullseye
    volumes:
        - neo4j_data:/data
    environment:
        - NEO4J_AUTH=neo4j/lightrag
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: always

  db-chroma:
    image: chromadb/chroma:1.0.9
    volumes:
      - chroma_data:/data
    environment:
      - CHROMA_SERVER_AUTHN_CREDENTIALS=token
      - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER=X-Chroma-Token
      - CHROMA_SERVER_AUTHN_PROVIDER=chromadb.auth.token_authn.TokenAuthenticationServerProvider
    ports:
      - "8000:8000"

  # backend:
  #   build:
  #     context: ../backend
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - db-postgres
  #     - db-neo4j
  #   volumes:
  #     - static:/code/static
  #     - media:/code/media
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=compliance_ai_assistant.settings.production
  #     - ALLOWED_HOSTS=*
  #     - DATABASE_NAME=compliance_ai_assistant
  #     - DATABASE_USER=postgres
  #     - DATABASE_PASSWORD=postgres
  #     - DATABASE_HOST=db-postgres
  #     - DATABASE_PORT=5432
  #   ports:
  #     - "8000:8000"
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   restart: unless-stopped

volumes:
  pg_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../databases/db-postgres
  neo4j_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../databases/db-neo4j
  chroma_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ../databases/db-chroma
  static:
    driver: local
  media:
    driver: local